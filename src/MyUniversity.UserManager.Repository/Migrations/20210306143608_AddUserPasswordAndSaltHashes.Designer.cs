// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyUniversity.UserManager.Repository.DbContext;

namespace MyUniversity.UserManager.Repository.Migrations
{
    [DbContext(typeof(UMDBContext))]
    [Migration("20210306143608_AddUserPasswordAndSaltHashes")]
    partial class AddUserPasswordAndSaltHashes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.1.21102.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.University.UniversityEntity", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TenantId");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            TenantId = "11116258-9207-4bdc-b101-fb560cc8cb20",
                            Address = "University Street, 1, Lviv, Lviv region, 79000",
                            EmailAddress = "Ivan.Franko.University@lnu.edu.ua",
                            Name = "Ivan Franko National University of Lviv",
                            PhoneNumber = "+380 (50) 123 4567"
                        });
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.User.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Role")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Role = "Service"
                        },
                        new
                        {
                            Id = 3,
                            Role = "UniversityAdmin"
                        },
                        new
                        {
                            Id = 4,
                            Role = "Teacher"
                        },
                        new
                        {
                            Id = 5,
                            Role = "Student"
                        });
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.User.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsSoftDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varbinary(128)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "Super.Admin@gmail.com",
                            FirstName = "Super",
                            IsSoftDeleted = false,
                            LastName = "Admin",
                            PasswordHash = new byte[] { 74, 76, 212, 16, 193, 168, 161, 83, 174, 210, 87, 83, 181, 138, 203, 61, 60, 198, 194, 196, 239, 11, 215, 248, 57, 47, 43, 138, 32, 122, 159, 230, 114, 74, 197, 146, 208, 24, 156, 208, 226, 140, 10, 169, 169, 125, 255, 11, 113, 139, 105, 72, 162, 81, 32, 114, 181, 49, 4, 71, 75, 50, 210, 151 },
                            PasswordSalt = new byte[] { 51, 231, 238, 53, 127, 178, 100, 131, 224, 127, 74, 9, 162, 182, 60, 124, 3, 69, 8, 246, 162, 173, 158, 116, 92, 46, 253, 253, 223, 7, 101, 254, 67, 0, 137, 221, 134, 90, 214, 60, 32, 134, 174, 174, 34, 38, 168, 187, 209, 28, 175, 222, 235, 54, 125, 61, 190, 60, 233, 103, 209, 61, 73, 44, 238, 59, 219, 209, 165, 155, 145, 151, 219, 46, 123, 210, 54, 113, 42, 11, 186, 149, 162, 10, 176, 243, 150, 22, 172, 129, 200, 9, 56, 160, 116, 254, 147, 148, 231, 24, 115, 40, 224, 38, 202, 33, 145, 219, 198, 174, 250, 79, 37, 213, 224, 55, 186, 184, 198, 28, 26, 182, 25, 121, 200, 254, 67, 242 },
                            PhoneNumber = "380 50 123 4567",
                            TenantId = "11116258-9207-4bdc-b101-fb560cc8cb20"
                        });
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.User.UserRoleEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.User.UserEntity", b =>
                {
                    b.HasOne("MyUniversity.UserManager.Repository.Entities.University.UniversityEntity", "University")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("University");
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.User.UserRoleEntity", b =>
                {
                    b.HasOne("MyUniversity.UserManager.Repository.Entities.User.RoleEntity", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyUniversity.UserManager.Repository.Entities.User.UserEntity", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.University.UniversityEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.User.RoleEntity", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MyUniversity.UserManager.Repository.Entities.User.UserEntity", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
